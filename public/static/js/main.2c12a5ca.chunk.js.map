{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","components/auth/LoginScreen.js","hooks/useForm.js","components/ui/NavBar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/calendar.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteFab.js","components/calendar/CalendarScreen.js","router/PublicRoutes.js","router/PrivateRoute.js","router/AppRouter.js","reducers/uiReducer.js","reducers/calendarReducer.js","reducers/authReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","REACT_APP_API_URL","fetchSintoken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchContoken","token","localStorage","getItem","types","prepareEvents","events","map","ev","end","moment","toDate","start","loadEvents","type","payload","addNewEvent","event","editEvent","setActiveEvent","clearActiveEvent","startLogout","dispatch","clear","logout","finishCheking","login","user","LoginScreen","initialState","useState","values","setValues","target","name","value","useForm","email","password","emailR","password1","password2","handleInputChange","useDispatch","className","onSubmit","e","preventDefault","a","resp","json","ok","setItem","Date","getTime","id","Swal","fire","msg","startLogin","autoComplete","placeholder","onChange","startRegister","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","openModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","second","add","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","startDate","setStartDate","endDate","setEndDate","validTitle","setValidTitle","formValues","setFormValues","useEffect","closeModalUI","overlayClassName","isOpen","onRequestClose","closeTimeoutMS","shouldCloseOnEsc","style","contentLabel","momentStart","momentEnd","isSameOrAfter","trim","length","evento","startEditEvent","getState","uid","res","_id","minDate","minLength","rows","AddNewFab","DeleteFab","console","log","locale","localizer","momentLocalizer","CalendarScreen","view","setView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","components","onSelectSlot","selectable","onDoubleClickEvent","onSelectEvent","onView","PublicRoute","isAuth","Component","component","rest","props","to","PrivateRoute","AppRouter","cheking","path","exact","rootReducers","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c12a5ca.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL\r\n\r\nconst fetchSintoken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst fetchContoken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n                'Content-type': 'application/json'\r\n            },\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token,\r\n                'Content-type': 'application/json',\r\n            },\r\n            body: JSON.stringify(data)\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport {\r\n    fetchSintoken,\r\n    fetchContoken\r\n}","export const types={\r\n    uiOpenModal:'[ui] Open modal',\r\n    uiCloseModal:'[ui] Close modal',\r\n\r\n    eventSetActive:'[event] Set active',\r\n    eventStartAddNew:'[event] Start Add new',\r\n    eventAddNew:'[event] Add new',\r\n    eventEdit:'[event] Edit event',\r\n    eventClear:'[event] Clear event',\r\n    eventDelete:'[event] Delete event',\r\n    eventLoad:'[event] Load event',\r\n    eventClearData:'[event] Clear data',\r\n    \r\n    authCheking:'[auth] Cheking loging state',\r\n    authFinishCheking: '[auth] Finish cheking loging state',\r\n    authStartLogin:'[auth] Start login',\r\n    authLogin:'[finish] Login',\r\n    authStartRegister:'[auth] Start register',\r\n    authStartToken:'[auth] Start token',\r\n    authLogout:'[auth] Logout'\r\n}","import moment from 'moment'\r\n\r\nexport const prepareEvents = (events = []) => {\r\n    return events.map((ev) => (\r\n        {\r\n            ...ev,\r\n            end: moment(ev.end).toDate(),\r\n            start: moment(ev.start).toDate()\r\n        }))\r\n}","import Swal from \"sweetalert2\"\r\nimport { fetchContoken } from \"../helpers/fetch\"\r\nimport { prepareEvents } from \"../helpers/prepareEvents\"\r\nimport { types } from \"../types/types\"\r\n\r\n\r\n\r\nexport const startNewNote = (event) => {\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const loadEvents = (events) => {\r\n    return {\r\n        type: types.eventLoad,\r\n        payload: events\r\n    }\r\n}\r\n\r\nexport const startEditEvent = (event) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchContoken(`events/${event.id}`, event, 'PUT');\r\n        const data = await resp.json();\r\n        if (data.ok) {\r\n            dispatch(editEvent(event));\r\n            Swal.fire('', 'Modificado', 'success');\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startloadEvents = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchContoken('events');\r\n        const data = await resp.json();\r\n        if (data.ok) {\r\n            const events = prepareEvents(data.events);\r\n            dispatch(loadEvents(events));\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startAddNewEvent = (evento) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n        const res = await fetchContoken('events', evento, 'POST');\r\n        const data = await res.json();\r\n        if (data.ok) {\r\n            evento.id = data.evento.id\r\n            evento.user = {\r\n                _id: uid,\r\n                name\r\n            }\r\n            dispatch(addNewEvent(evento));\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nconst addNewEvent = (event) => {\r\n    return {\r\n        type: types.eventAddNew,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const editEvent = (event) => {\r\n    return {\r\n        type: types.eventEdit,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const deleteEvent = () => {\r\n    return {\r\n        type: types.eventDelete,\r\n    }\r\n}\r\n\r\nexport const startDeleteEvent = () => {\r\n    return async (dispatch, getState) => {\r\n        const { activeEvent } = getState().calendar;\r\n        const res = await fetchContoken(`events/${activeEvent.id}`, activeEvent, 'DELETE');\r\n        const data = await res.json();\r\n        console.log(data);\r\n        if (data.ok) {\r\n            Swal.fire('Info', 'Evento Borrado', 'info');\r\n            dispatch(deleteEvent());\r\n        } else {\r\n            Swal.fire('Error', data.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveEvent = (event) => {\r\n    return {\r\n        type: types.eventSetActive,\r\n        payload: event\r\n    }\r\n}\r\n\r\nexport const clearActiveEvent = () => {\r\n    return {\r\n        type: types.eventClear,\r\n    }\r\n}\r\n\r\nexport const clearData = () => {\r\n    return {\r\n        type: types.eventClearData\r\n    }\r\n}","import { fetchContoken, fetchSintoken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\nimport Swal from 'sweetalert2'\r\nimport { clearData } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchSintoken('auth', { email, password }, 'POST');\r\n            const data = await resp.json();\r\n\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('token-start-date', new Date().getTime())\r\n                dispatch(login({ name: data.name, id: data.id }));\r\n            } else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    data.msg,\r\n                    'error'\r\n                )\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\r\n                'Error',\r\n                error,\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n};\r\n\r\nexport const startRegister = (name, email, password) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchSintoken('auth/new', {\r\n                name,\r\n                email,\r\n                password\r\n            }, 'POST');\r\n            const data = await resp.json();\r\n\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('token-start-date', new Date().getTime())\r\n                dispatch(login({ name: data.name, id: data.id }));\r\n            } else {\r\n                Swal.fire(\r\n                    'Error',\r\n                    data.msg,\r\n                    'error'\r\n                )\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\r\n                'Error',\r\n                error,\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport const startLogout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(clearData())\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: types.authLogout\r\n    }\r\n}\r\n\r\nexport const startCheking = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchContoken('auth/renew');\r\n            const data = await resp.json();\r\n            if (data.ok) {\r\n                localStorage.setItem('token', data.token);\r\n                localStorage.setItem('token-start-date', new Date().getTime())\r\n                dispatch(login({ name: data.name, id: data.id }));\r\n            } else {\r\n                Swal.fire(\r\n                    'Aviso',\r\n                    data.msg,\r\n                    'warning'\r\n                )\r\n                dispatch(finishCheking());\r\n            }\r\n        } catch (error) {\r\n            Swal.fire(\r\n                'Error',\r\n                error,\r\n                'error'\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport const finishCheking = () => {\r\n    return {\r\n        type: types.authFinishCheking,\r\n    }\r\n}\r\n\r\nexport const login = (user) => {\r\n    return {\r\n        type: types.authLogin,\r\n        payload: user\r\n    }\r\n}","import React  from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport {  startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const [values, handleInputChange, ] = useForm({\r\n        email: '',\r\n        password: '',\r\n        emailR: '',\r\n        password1: '',\r\n        password2: '',\r\n        name: ''\r\n\r\n    })\r\n\r\n    const { email, emailR, password, password1, password2, name } = values\r\n    const dispatch = useDispatch();\r\n\r\n    const handleSubmitLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(email, password));\r\n    }\r\n\r\n    const handleSubmitRegister = (e) => {\r\n        e.preventDefault();\r\n        if (!(password1 === password2)) {\r\n            return Swal.fire('Advertencia', 'Las contraseñas deben ser iguales', 'warning');\r\n        }\r\n        dispatch(startRegister(name, emailR, password1));\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleSubmitLogin}>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"email\"\r\n                                value={email}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password\"\r\n                                value={password}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleSubmitRegister}>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"text\"\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"name\"\r\n                                onChange={handleInputChange}\r\n                                value={name}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"email\"\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"emailR\"\r\n                                value={emailR}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                autoComplete=\"off\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"password1\"\r\n                                value={password1}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"password2\"\r\n                                value={password2}\r\n                                onChange={handleInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group mt-3\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState);\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { logout, startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n    const { name } = useSelector(state => state.auth)\r\n    const dispatch = useDispatch();\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4 p-3\">\r\n            <span className=\"navbar-brand\">{name}</span>\r\n            <button onClick={handleLogout} className=\"btn btn-danger \">Salir</button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n    const {title, user={}}=event;\r\n    return (\r\n        <div>\r\n            <span>{title}</span>\r\n            <strong>- {user?.name}</strong>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\nexport const openModal = () => {\r\n    return {\r\n        type: types.uiOpenModal\r\n    }\r\n}\r\n\r\nexport const closeModal = () => {\r\n    return {\r\n        type: types.uiCloseModal\r\n    }\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment'\r\nimport Swal from 'sweetalert2'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { closeModal } from '../../actions/calendar'\r\n\r\nimport './modal.css';\r\nimport { clearActiveEvent, startAddNewEvent, startEditEvent } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).second(0).add(1, 'hours');\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: now.add(1, 'hours').toDate()\r\n}\r\n\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const { modalOpen } = useSelector(state => state.ui)\r\n    const { activeEvent } = useSelector(state => state.calendar)\r\n\r\n    const [startDate, setStartDate] = useState(now.toDate())\r\n    const [endDate, setEndDate] = useState(now.add(1, 'hours').toDate())\r\n    const [validTitle, setValidTitle] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues({ ...activeEvent });\r\n        } else {\r\n            setFormValues(initEvent)\r\n        }\r\n    }, [activeEvent])\r\n\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n\r\n    }\r\n\r\n\r\n    const closeModalUI = () => {\r\n        dispatch(closeModal());\r\n        dispatch(clearActiveEvent());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleChangeStartDate = (e) => {\r\n        setStartDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleChangeEndDate = (e) => {\r\n        setEndDate(e)\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha final debe ser mayor', 'error');\r\n        }\r\n        if (title.trim().length === 0) {\r\n            return setValidTitle(false);\r\n        }\r\n        setValidTitle(true);\r\n        const event = { ...formValues };\r\n        if (event.id) {\r\n            dispatch(startEditEvent(event));\r\n        } else {\r\n            dispatch(startAddNewEvent(event));\r\n        }\r\n        closeModalUI();\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            isOpen={modalOpen}\r\n            //  onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModalUI}\r\n            closeTimeoutMS={200}\r\n            shouldCloseOnEsc={true}\r\n            style={customStyles}\r\n            contentLabel=\"EJEMPLO\"\r\n        >\r\n            <h1> {(!!activeEvent?.id) ? 'Editar Evento' : 'Guardar Evento'} </h1>\r\n            <hr />\r\n            <form className=\"container\" onSubmit={handleSubmit}>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleChangeStartDate}\r\n                        value={startDate}\r\n                        className=\"form-control\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleChangeEndDate}\r\n                        value={endDate}\r\n                        minDate={startDate}\r\n                        className=\"form-control\" />\r\n                </div>\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!validTitle && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        minLength=\"3\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary form-control\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n                <br />\r\n            </form>\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport { setActiveEvent } from '../../actions/events';\r\nimport moment from 'moment'\r\nimport { openModal } from '../../actions/calendar';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleAddEvent=()=>{\r\n        dispatch(setActiveEvent({\r\n            title: '',\r\n            start: moment().add(2, 'hours').toDate(),\r\n            end: moment().add(4, 'hours').toDate(),\r\n        }));\r\n        dispatch(openModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleAddEvent}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { startDeleteEvent } from '../../actions/events';\r\n\r\nexport const DeleteFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteEvent = () => {\r\n        dispatch(startDeleteEvent());\r\n    }\r\n\r\n\r\n    return <>\r\n        <button\r\n            className=\"btn btn-danger fab-delete\"\r\n            onClick={handleDeleteEvent}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento</span>\r\n        </button>\r\n\r\n    </>\r\n\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { NavBar } from '../ui/NavBar'\r\nimport { messages } from '../../helpers/calendar-messages-es'\r\nimport { CalendarEvent } from './CalendarEvent'\r\nimport { CalendarModal } from './CalendarModal'\r\nimport { openModal } from '../../actions/calendar'\r\nimport { clearActiveEvent, setActiveEvent, startloadEvents } from '../../actions/events'\r\nimport { AddNewFab } from '../ui/AddNewFab'\r\nimport { DeleteFab } from '../ui/DeleteFab'\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n    const { events } = useSelector(state => state.calendar);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n    const [view, setView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(startloadEvents());\r\n    }, [dispatch])\r\n    const onDoubleClick = (e) => {\r\n        dispatch(setActiveEvent(e))\r\n        dispatch(openModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(setActiveEvent(e))\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setView(e);\r\n        localStorage.setItem('lastView', e)\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n       \r\n        const style = {\r\n            backgroundColor: (uid===event.user._id)?'#367cf7':'#465660',\r\n            borderRadius: '0px',\r\n            opacity: '0.8',\r\n            display: 'block',\r\n            color: 'white'\r\n\r\n        }\r\n\r\n        return{\r\n            style\r\n        }\r\n    };\r\n\r\n    const selectSlot = () => {\r\n        dispatch(clearActiveEvent());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <NavBar />\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                components={{ event: CalendarEvent }}\r\n                onSelectSlot={selectSlot}\r\n                selectable={true}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={view}\r\n            />\r\n            <CalendarModal />\r\n            <AddNewFab />\r\n            {activeEvent && <DeleteFab />}\r\n        </>\r\n\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PublicRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={(props) => (isAuth) ?\r\n                (<Redirect to='/' />) :\r\n                (<Component {...props} />)\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuth,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            component={\r\n                (props) => (isAuth) ?\r\n                    (<Component {...props} />) :\r\n                    (<Redirect to='/login' />)\r\n            }\r\n        />\r\n\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startCheking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PublicRoute } from './PublicRoutes';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { cheking, uid } = useSelector(state => state.auth)\r\n    useEffect(() => {\r\n        dispatch(startCheking());\r\n    }, [dispatch])\r\n    return (cheking) ?\r\n        (<h5>Espere......</h5>) :\r\n        (<Router>\r\n            <Switch>\r\n                <PublicRoute isAuth={!!uid} path=\"/login\" exact component={LoginScreen} />\r\n                <PrivateRoute isAuth={!!uid} exact path=\"/\" component={CalendarScreen} />\r\n                <Redirect to='/' />\r\n            </Switch>\r\n        </Router>\r\n        )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState={\r\n    modalOpen:false,\r\n}\r\n\r\nexport const uiReducer=(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen:true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n        case types.eventEdit:\r\n            return {\r\n                ...state,\r\n                events: state.events.map((event) => (\r\n                    (event.id === action.payload.id) ?\r\n                        action.payload :\r\n                        event))\r\n            }\r\n        case types.eventClear:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter((event) => (\r\n                    (event.id !== state.activeEvent.id))),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoad:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload],\r\n            }\r\n        case types.eventClearData:\r\n            return {\r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    cheking: true,\r\n    uid: null,\r\n    name: null\r\n\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authCheking:\r\n            return {\r\n                ...state,\r\n                cheking: true\r\n            }\r\n        case types.authFinishCheking:\r\n            return {\r\n                ...state,\r\n                cheking: false\r\n            }\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                cheking: false,\r\n                name: action.payload.name,\r\n                uid: action.payload.id\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                cheking: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { uiReducer } from './uiReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { authReducer } from './authReducer'\r\nexport const rootReducers = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})","import {createStore, compose, applyMiddleware} from 'redux'\r\nimport { rootReducers } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk'\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store=createStore(\r\n    rootReducers,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);\r\n\r\n","import { AppRouter } from \"./router/AppRouter\";\n import {Provider} from 'react-redux'\nimport { store } from \"./store/store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <AppRouter/>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './CalendarApp';\nimport './styles.css'\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}